class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        // create a temp vector containing the digits of the original
        vector<int> temp = digits;
        bool finished = false;
        int temp_val;
        // removing all 9 from the back
        while (!finished) {
            if (temp.empty()) {
                finished = true;
            } else if (temp.back() == 9) {
                temp.pop_back();
            } else if (temp.back() < 9) {
                finished = true;
            }
        }
        // if the digit was all 9s push a 1 then fill the remaining spots with 0s
        if (temp.empty()) {
            temp.push_back(1);
            for (int i = temp.size()-1; i < digits.size(); i++) {
                temp.push_back(0);
            }
        } else {
            // add 1 to the back most value 
            temp_val = temp.back();
            temp.pop_back();
            temp.push_back(temp_val + 1);
            // fill the remaining spaces with 0s
            for (int i = temp.size(); i < digits.size(); i++) {
                temp.push_back(0);
            }
        }
        return temp;
    }
};